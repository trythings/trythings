{
 "kind": "discovery#restDescription",
 "etag": "\"tbys6C40o18GZwyMen5GMkdK-3s/sMgjc4eoIFjgub4daTU-MGW0WMA\"",
 "discoveryVersion": "v1",
 "id": "storage:v1",
 "name": "storage",
 "version": "v1",
 "revision": "20161109",
 "title": "Cloud Storage JSON API",
 "description": "Stores and retrieves potentially large, immutable data objects.",
 "ownerDomain": "google.com",
 "ownerName": "Google",
 "icons": {
  "x16": "https://www.google.com/images/icons/product/cloud_storage-16.png",
  "x32": "https://www.google.com/images/icons/product/cloud_storage-32.png"
 },
 "documentationLink": "https://developers.google.com/storage/docs/json_api/",
 "labels": [
  "labs"
 ],
 "protocol": "rest",
 "baseUrl": "https://www.googleapis.com/storage/v1/",
 "basePath": "/storage/v1/",
 "rootUrl": "https://www.googleapis.com/",
 "servicePath": "storage/v1/",
 "batchPath": "batch",
 "parameters": {
  "alt": {
   "type": "string",
   "description": "Data format for the response.",
   "default": "json",
   "enum": [
    "json"
   ],
   "enumDescriptions": [
    "Responses with Content-Type of application/json"
   ],
   "location": "query"
  },
  "fields": {
   "type": "string",
   "description": "Selector specifying which fields to include in a partial response.",
   "location": "query"
  },
  "key": {
   "type": "string",
   "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
   "location": "query"
  },
  "oauth_token": {
   "type": "string",
   "description": "OAuth 2.0 token for the current user.",
   "location": "query"
  },
  "prettyPrint": {
   "type": "boolean",
   "description": "Returns response with indentations and line breaks.",
   "default": "true",
   "location": "query"
  },
  "quotaUser": {
   "type": "string",
   "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
   "location": "query"
  },
  "userIp": {
   "type": "string",
   "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
   "location": "query"
  }
 },
 "auth": {
  "oauth2": {
   "scopes": {
    "https://www.googleapis.com/auth/cloud-platform": {
     "description": "View and manage your data across Google Cloud Platform services"
    },
    "https://www.googleapis.com/auth/cloud-platform.read-only": {
     "description": "View your data across Google Cloud Platform services"
    },
    "https://www.googleapis.com/auth/devstorage.full_control": {
     "description": "Manage your data and permissions in Google Cloud Storage"
    },
    "https://www.googleapis.com/auth/devstorage.read_only": {
     "description": "View your data in Google Cloud Storage"
    },
    "https://www.googleapis.com/auth/devstorage.read_write": {
     "description": "Manage your data in Google Cloud Storage"
    }
   }
  }
 },
 "features": [
  "dataWrapper"
 ],
 "schemas": {
  "Bucket": {
   "id": "Bucket",
   "type": "object",
   "description": "A bucket.",
   "properties": {
    "cors": {
     "type": "array",
     "items": {
      "type": "object",
      "properties": {
       "maxAgeSeconds": {
        "type": "integer",
        "format": "int32"
       },
       "method": {
        "type": "array",
        "items": {
         "type": "string"
        }
       }
      }
     }
    },
    "id": {
     "type": "string"
    },
    "kind": {
     "type": "string",
     "default": "storage#bucket"
    }
   }
  },
  "Buckets": {
   "id": "Buckets",
   "type": "object",
   "properties": {
    "items": {
     "type": "array",
     "items": {
      "$ref": "Bucket"
     }
    }
   }
  }
 },
 "resources": {
  "bucketAccessControls": {
   "methods": {
    "delete": {
     "id": "storage.bucketAccessControls.delete",
     "path": "b/{bucket}/acl/{entity}",
     "httpMethod": "DELETE",
     "description": "Permanently deletes the ACL entry for the specified entity on the specified bucket.",
     "parameters": {
      "bucket": {
       "type": "string",
       "description": "Name of a bucket.",
       "required": true,
       "location": "path"
      },
      "entity": {
       "type": "string",
       "description": "The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "bucket",
      "entity"
     ],
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/devstorage.full_control"
     ]
    },
    "get": {
     "id": "storage.bucketAccessControls.get",
     "path": "b/{bucket}/acl/{entity}",
     "httpMethod": "GET",
     "description": "Returns the ACL entry for the specified entity on the specified bucket.",
     "parameters": {
      "bucket": {
       "type": "string",
       "description": "Name of a bucket.",
       "required": true,
       "location": "path"
      },
      "entity": {
       "type": "string",
       "description": "The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "bucket",
      "entity"
     ],
     "response": {
      "$ref": "BucketAccessControl"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/devstorage.full_control"
     ]
    },
    "insert": {
     "id": "storage.bucketAccessControls.insert",
     "path": "b/{bucket}/acl",
     "httpMethod": "POST",
     "description": "Creates a new ACL entry on the specified bucket.",
     "parameters": {
      "bucket": {
       "type": "string",
       "description": "Name of a bucket.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "bucket"
     ],
     "request": {
      "$ref": "BucketAccessControl"
     },
     "response": {
      "$ref": "BucketAccessControl"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/devstorage.full_control"
     ]
    },
    "list": {
     "id": "storage.bucketAccessControls.list",
     "path": "b/{bucket}/acl",
     "httpMethod": "GET",
     "description": "Retrieves ACL entries on the specified bucket.",
     "parameters": {
      "bucket": {
       "type": "string",
       "description": "Name of a bucket.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "bucket"
     ],
     "response": {
      "$ref": "BucketAccessControls"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/devstorage.full_control"
     ]
    },
    "patch": {
     "id": "storage.bucketAccessControls.patch",
     "path": "b/{bucket}/acl/{entity}",
     "httpMethod": "PATCH",
     "description": "Updates an ACL entry on the specified bucket. This method supports patch semantics.",
     "parameters": {
      "bucket": {
       "type": "string",
       "description": "Name of a bucket.",
       "required": true,
       "location": "path"
      },
      "entity": {
       "type": "string",
       "description": "The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "bucket",
      "entity"
     ],
     "request": {
      "$ref": "BucketAccessControl"
     },
     "response": {
      "$ref": "BucketAccessControl"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/devstorage.full_control"
     ]
    },
    "update": {
     "id": "storage.bucketAccessControls.update",
     "path": "b/{bucket}/acl/{entity}",
     "httpMethod": "PUT",
     "description": "Updates an ACL entry on the specified bucket.",
     "parameters": {
      "bucket": {
       "type": "string",
       "description": "Name of a bucket.",
       "required": true,
       "location": "path"
      },
      "entity": {
       "type": "string",
       "description": "The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "bucket",
      "entity"
     ],
     "request": {
      "$ref": "BucketAccessControl"
     },
     "response": {
      "$ref": "BucketAccessControl"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/devstorage.full_control"
     ]
    }
   }
  },
  "buckets": {
   "methods": {
    "delete": {
     "id": "storage.buckets.delete",
     "path": "b/{bucket}",
     "httpMethod": "DELETE",
     "description": "Permanently deletes an empty bucket.",
     "parameters": {
      "bucket": {
       "type": "string",
       "description": "Name of a bucket.",
       "required": true,
       "location": "path"
      },
      "ifMetagenerationMatch": {
       "type": "string",
       "description": "If set, only deletes the bucket if its metageneration matches this value.",
       "format": "int64",
       "location": "query"
      },
      "ifMetagenerationNotMatch": {
       "type": "string",
       "description": "If set, only deletes the bucket if its metageneration does not match this value.",
       "format": "int64",
       "location": "query"
      }
     },
     "parameterOrder": [
      "bucket"
     ],
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/devstorage.full_control",
      "https://www.googleapis.com/auth/devstorage.read_write"
     ]
    },
    "get": {
     "id": "storage.buckets.get",
     "path": "b/{bucket}",
     "httpMethod": "GET",
     "description": "Returns metadata for the specified bucket.",
     "parameters": {
      "bucket": {
       "type": "string",
       "description": "Name of a bucket.",
       "required": true,
       "location": "path"
      },
      "ifMetagenerationMatch": {
       "type": "string",
       "description": "Makes the return of the bucket metadata conditional on whether the bucket's current metageneration matches the given value.",
       "format": "int64",
       "location": "query"
      },
      "ifMetagenerationNotMatch": {
       "type": "string",
       "description": "Makes the return of the bucket metadata conditional on whether the bucket's current metageneration does not match the given value.",
       "format": "int64",
       "location": "query"
      },
      "projection": {
       "type": "string",
       "description": "Set of properties to return. Defaults to noAcl.",
       "enum": [
        "full",
        "noAcl"
       ],
       "enumDescriptions": [
        "Include all properties.",
        "Omit owner, acl and defaultObjectAcl properties."
       ],
       "location": "query"
      }
     },
     "parameterOrder": [
      "bucket"
     ],
     "response": {
      "$ref": "Bucket"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/cloud-platform.read-only",
      "https://www.googleapis.com/auth/devstorage.full_control",
      "https://www.googleapis.com/auth/devstorage.read_only",
      "https://www.googleapis.com/auth/devstorage.read_write"
     ]
    },
    "insert": {
     "id": "storage.buckets.insert",
     "path": "b",
     "httpMethod": "POST",
     "description": "Creates a new bucket.",
     "parameters": {
      "predefinedAcl": {
       "type": "string",
       "description": "Apply a predefined set of access controls to this bucket.",
       "enum": [
        "authenticatedRead",
        "private",
        "projectPrivate",
        "publicRead",
        "publicReadWrite"
       ],
       "enumDescriptions": [
        "Project team owners get OWNER access, and allAuthenticatedUsers get READER access.",
        "Project team owners get OWNER access.",
        "Project team members get access according to their roles.",
        "Project team owners get OWNER access, and allUsers get READER access.",
        "Project team owners get OWNER access, and allUsers get WRITER access."
       ],
       "location": "query"
      },
      "predefinedDefaultObjectAcl": {
       "type": "string",
       "description": "Apply a predefined set of default object access controls to this bucket.",
       "enum": [
        "authenticatedRead",
        "bucketOwnerFullControl",
        "bucketOwnerRead",
        "private",
        "projectPrivate",
        "publicRead"
       ],
       "enumDescriptions": [
        "Object owner gets OWNER access, and allAuthenticatedUsers get READER access.",
        "Object owner gets OWNER access, and project team owners get OWNER access.",
        "Object owner gets OWNER access, and project team owners get READER access.",
        "Object owner gets OWNER access.",
        "Object owner gets OWNER access, and project team members get access according to their roles.",
        "Object owner gets OWNER access, and allUsers get READER access."
       ],
       "location": "query"
      },
      "project": {
       "type": "string",
       "description": "A valid API project identifier.",
       "required": true,
       "location": "query"
      },
      "projection": {
       "type": "string",
       "description": "Set of properties to return. Defaults to noAcl, unless the bucket resource specifies acl or defaultObjectAcl properties, when it defaults to full.",
       "enum": [
        "full",
        "noAcl"
       ],
       "enumDescriptions": [
        "Include all properties.",
        "Omit owner, acl and defaultObjectAcl properties."
       ],
       "location": "query"
      }
     },
     "parameterOrder": [
      "project"
     ],
     "request": {
      "$ref": "Bucket"
     },
     "response": {
      "$ref": "Bucket"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/devstorage.full_control",
      "https://www.googleapis.com/auth/devstorage.read_write"
     ]
    },
    "list": {
     "id": "storage.buckets.list",
     "path": "b",
     "httpMethod": "GET",
     "description": "Retrieves a list of buckets for a given project.",
     "parameters": {
      "maxResults": {
       "type": "integer",
       "description": "Maximum number of buckets to return.",
       "format": "uint32",
       "minimum": "0",
       "location": "query"
      },
      "pageToken": {
       "type": "string",
       "description": "A previously-returned page token representing part of the larger set of results to view.",
       "location": "query"
      },
      "prefix": {
       "type": "string",
       "description": "Filter results to buckets whose names begin with this prefix.",
       "location": "query"
      },
      "project": {
       "type": "string",
       "description": "A valid API project identifier.",
       "required": true,
       "location": "query"
      },
      "projection": {
       "type": "string",
       "description": "Set of properties to return. Defaults to noAcl.",
       "enum": [
        "full",
        "noAcl"
       ],
       "enumDescriptions": [
        "Include all properties.",
        "Omit owner, acl and defaultObjectAcl properties."
       ],
       "location": "query"
      }
     },
     "parameterOrder": [
      "project"
     ],
     "response": {
      "$ref": "Buckets"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/cloud-platform.read-only",
      "https://www.googleapis.com/auth/devstorage.full_control",
      "https://www.googleapis.com/auth/devstorage.read_only",
      "https://www.googleapis.com/auth/devstorage.read_write"
     ]
    },
    "patch": {
     "id": "storage.buckets.patch",
     "path": "b/{bucket}",
     "httpMethod": "PATCH",
     "description": "Updates a bucket. Changes to the bucket will be readable immediately after writing, but configuration changes may take time to propagate. This method supports patch semantics.",
     "parameters": {
      "bucket": {
       "type": "string",
       "description": "Name of a bucket.",
       "required": true,
       "location": "path"
      },
      "ifMetagenerationMatch": {
       "type": "string",
       "description": "Makes the return of the bucket metadata conditional on whether the bucket's current metageneration matches the given value.",
       "format": "int64",
       "location": "query"
      },
      "ifMetagenerationNotMatch": {
       "type": "string",
       "description": "Makes the return of the bucket metadata conditional on whether the bucket's current metageneration does not match the given value.",
       "format": "int64",
       "location": "query"
      },
      "predefinedAcl": {
       "type": "string",
       "description": "Apply a predefined set of access controls to this bucket.",
       "enum": [
        "authenticatedRead",
        "private",
        "projectPrivate",
        "publicRead",
        "publicReadWrite"
       ],
       "enumDescriptions": [
        "Project team owners get OWNER access, and allAuthenticatedUsers get READER access.",
        "Project team owners get OWNER access.",
        "Project team members get access according to their roles.",
        "Project team owners get OWNER access, and allUsers get READER access.",
        "Project team owners get OWNER access, and allUsers get WRITER access."
       ],
       "location": "query"
      },
      "predefinedDefaultObjectAcl": {
       "type": "string",
       "description": "Apply a predefined set of default object access controls to this bucket.",
       "enum": [
        "authenticatedRead",
        "bucketOwnerFullControl",
        "bucketOwnerRead",
        "private",
        "projectPrivate",
        "publicRead"
       ],
       "enumDescriptions": [
        "Object owner gets OWNER access, and allAuthenticatedUsers get READER access.",
        "Object owner gets OWNER access, and project team owners get OWNER access.",
        "Object owner gets OWNER access, and project team owners get READER access.",
        "Object owner gets OWNER access.",
        "Object owner gets OWNER access, and project team members get access according to their roles.",
        "Object owner gets OWNER access, and allUsers get READER access."
       ],
       "location": "query"
      },
      "projection": {
       "type": "string",
       "description": "Set of properties to return. Defaults to full.",
       "enum": [
        "full",
        "noAcl"
       ],
       "enumDescriptions": [
        "Include all properties.",
        "Omit owner, acl and defaultObjectAcl properties."
       ],
       "location": "query"
      }
     },
     "parameterOrder": [
      "bucket"
     ],
     "request": {
      "$ref": "Bucket"
     },
     "response": {
      "$ref": "Bucket"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/devstorage.full_control"
     ]
    },
    "update": {
     "id": "storage.buckets.update",
     "path": "b/{bucket}",
     "httpMethod": "PUT",
     "description": "Updates a bucket. Changes to the bucket will be readable immediately after writing, but configuration changes may take time to propagate.",
     "parameters": {
      "bucket": {
       "type": "string",
       "description": "Name of a bucket.",
       "required": true,
       "location": "path"
      },
      "ifMetagenerationMatch": {
       "type": "string",
       "description": "Makes the return of the bucket metadata conditional on whether the bucket's current metageneration matches the given value.",
       "format": "int64",
       "location": "query"
      },
      "ifMetagenerationNotMatch": {
       "type": "string",
       "description": "Makes the return of the bucket metadata conditional on whether the bucket's current metageneration does not match the given value.",
       "format": "int64",
       "location": "query"
      },
      "predefinedAcl": {
       "type": "string",
       "description": "Apply a predefined set of access controls to this bucket.",
       "enum": [
        "authenticatedRead",
        "private",
        "projectPrivate",
        "publicRead",
        "publicReadWrite"
       ],
       "enumDescriptions": [
        "Project team owners get OWNER access, and allAuthenticatedUsers get READER access.",
        "Project team owners get OWNER access.",
        "Project team members get access according to their roles.",
        "Project team owners get OWNER access, and allUsers get READER access.",
        "Project team owners get OWNER access, and allUsers get WRITER access."
       ],
       "location": "query"
      },
      "predefinedDefaultObjectAcl": {
       "type": "string",
       "description": "Apply a predefined set of default object access controls to this bucket.",
       "enum": [
        "authenticatedRead",
        "bucketOwnerFullControl",
        "bucketOwnerRead",
        "private",
        "projectPrivate",
        "publicRead"
       ],
       "enumDescriptions": [
        "Object owner gets OWNER access, and allAuthenticatedUsers get READER access.",
        "Object owner gets OWNER access, and project team owners get OWNER access.",
        "Object owner gets OWNER access, and project team owners get READER access.",
        "Object owner gets OWNER access.",
        "Object owner gets OWNER access, and project team members get access according to their roles.",
        "Object owner gets OWNER access, and allUsers get READER access."
       ],
       "location": "query"
      },
      "projection": {
       "type": "string",
       "description": "Set of properties to return. Defaults to full.",
       "enum": [
        "full",
        "noAcl"
       ],
       "enumDescriptions": [
        "Include all properties.",
        "Omit owner, acl and defaultObjectAcl properties."
       ],
       "location": "query"
      }
     },
     "parameterOrder": [
      "bucket"
     ],
     "request": {
      "$ref": "Bucket"
     },
     "response": {
      "$ref": "Bucket"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/devstorage.full_control"
     ]
    }
   }
  },
  "channels": {
   "methods": {
    "stop": {
     "id": "storage.channels.stop",
     "path": "channels/stop",
     "httpMethod": "POST",
     "description": "Stop watching resources through this channel",
     "request": {
      "$ref": "Channel",
      "parameterName": "resource"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/cloud-platform.read-only",
      "https://www.googleapis.com/auth/devstorage.full_control",
      "https://www.googleapis.com/auth/devstorage.read_only",
      "https://www.googleapis.com/auth/devstorage.read_write"
     ]
    }
   }
  },
  "defaultObjectAccessControls": {
   "methods": {
    "delete": {
     "id": "storage.defaultObjectAccessControls.delete",
     "path": "b/{bucket}/defaultObjectAcl/{entity}",
     "httpMethod": "DELETE",
     "description": "Permanently deletes the default object ACL entry for the specified entity on the specified bucket.",
     "parameters": {
      "bucket": {
       "type": "string",
       "description": "Name of a bucket.",
       "required": true,
       "location": "path"
      },
      "entity": {
       "type": "string",
       "description": "The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "bucket",
      "entity"
     ],
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/devstorage.full_control"
     ]
    },
    "get": {
     "id": "storage.defaultObjectAccessControls.get",
     "path": "b/{bucket}/defaultObjectAcl/{entity}",
     "httpMethod": "GET",
     "description": "Returns the default object ACL entry for the specified entity on the specified bucket.",
     "parameters": {
      "bucket": {
       "type": "string",
       "description": "Name of a bucket.",
       "required": true,
       "location": "path"
      },
      "entity": {
       "type": "string",
       "description": "The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "bucket",
      "entity"
     ],
     "response": {
      "$ref": "ObjectAccessControl"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/devstorage.full_control"
     ]
    },
    "insert": {
     "id": "storage.defaultObjectAccessControls.insert",
     "path": "b/{bucket}/defaultObjectAcl",
     "httpMethod": "POST",
     "description": "Creates a new default object ACL entry on the specified bucket.",
     "parameters": {
      "bucket": {
       "type": "string",
       "description": "Name of a bucket.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "bucket"
     ],
     "request": {
      "$ref": "ObjectAccessControl"
     },
     "response": {
      "$ref": "ObjectAccessControl"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/devstorage.full_control"
     ]
    },
    "list": {
     "id": "storage.defaultObjectAccessControls.list",
     "path": "b/{bucket}/defaultObjectAcl",
     "httpMethod": "GET",
     "description": "Retrieves default object ACL entries on the specified bucket.",
     "parameters": {
      "bucket": {
       "type": "string",
       "description": "Name of a bucket.",
       "required": true,
       "location": "path"
      },
      "ifMetagenerationMatch": {
       "type": "string",
       "description": "If present, only return default ACL listing if the bucket's current metageneration matches this value.",
       "format": "int64",
       "location": "query"
      },
      "ifMetagenerationNotMatch": {
       "type": "string",
       "description": "If present, only return default ACL listing if the bucket's current metageneration does not match the given value.",
       "format": "int64",
       "location": "query"
      }
     },
     "parameterOrder": [
      "bucket"
     ],
     "response": {
      "$ref": "ObjectAccessControls"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/devstorage.full_control"
     ]
    },
    "patch": {
     "id": "storage.defaultObjectAccessControls.patch",
     "path": "b/{bucket}/defaultObjectAcl/{entity}",
     "httpMethod": "PATCH",
     "description": "Updates a default object ACL entry on the specified bucket. This method supports patch semantics.",
     "parameters": {
      "bucket": {
       "type": "string",
       "description": "Name of a bucket.",
       "required": true,
       "location": "path"
      },
      "entity": {
       "type": "string",
       "description": "The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "bucket",
      "entity"
     ],
     "request": {
      "$ref": "ObjectAccessControl"
     },
     "response": {
      "$ref": "ObjectAccessControl"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/devstorage.full_control"
     ]
    },
    "update": {
     "id": "storage.defaultObjectAccessControls.update",
     "path": "b/{bucket}/defaultObjectAcl/{entity}",
     "httpMethod": "PUT",
     "description": "Updates a default object ACL entry on the specified bucket.",
     "parameters": {
      "bucket": {
       "type": "string",
       "description": "Name of a bucket.",
       "required": true,
       "location": "path"
      },
      "entity": {
       "type": "string",
       "description": "The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "bucket",
      "entity"
     ],
     "request": {
      "$ref": "ObjectAccessControl"
     },
     "response": {
      "$ref": "ObjectAccessControl"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/devstorage.full_control"
     ]
    }
   }
  },
  "objectAccessControls": {
   "methods": {
    "delete": {
     "id": "storage.objectAccessControls.delete",
     "path": "b/{bucket}/o/{object}/acl/{entity}",
     "httpMethod": "DELETE",
     "description": "Permanently deletes the ACL entry for the specified entity on the specified object.",
     "parameters": {
      "bucket": {
       "type": "string",
       "description": "Name of a bucket.",
       "required": true,
       "location": "path"
      },
      "entity": {
       "type": "string",
       "description": "The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.",
       "required": true,
       "location": "path"
      },
      "generation": {
       "type": "string",
       "description": "If present, selects a specific revision of this object (as opposed to the latest version, the default).",
       "format": "int64",
       "location": "query"
      },
      "object": {
       "type": "string",
       "description": "Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "bucket",
      "object",
      "entity"
     ],
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/devstorage.full_control"
     ]
    },
    "get": {
     "id": "storage.objectAccessControls.get",
     "path": "b/{bucket}/o/{object}/acl/{entity}",
     "httpMethod": "GET",
     "description": "Returns the ACL entry for the specified entity on the specified object.",
     "parameters": {
      "bucket": {
       "type": "string",
       "description": "Name of a bucket.",
       "required": true,
       "location": "path"
      },
      "entity": {
       "type": "string",
       "description": "The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.",
       "required": true,
       "location": "path"
      },
      "generation": {
       "type": "string",
       "description": "If present, selects a specific revision of this object (as opposed to the latest version, the default).",
       "format": "int64",
       "location": "query"
      },
      "object": {
       "type": "string",
       "description": "Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "bucket",
      "object",
      "entity"
     ],
     "response": {
      "$ref": "ObjectAccessControl"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/devstorage.full_control"
     ]
    },
    "insert": {
     "id": "storage.objectAccessControls.insert",
     "path": "b/{bucket}/o/{object}/acl",
     "httpMethod": "POST",
     "description": "Creates a new ACL entry on the specified object.",
     "parameters": {
      "bucket": {
       "type": "string",
       "description": "Name of a bucket.",
       "required": true,
       "location": "path"
      },
      "generation": {
       "type": "string",
       "description": "If present, selects a specific revision of this object (as opposed to the latest version, the default).",
       "format": "int64",
       "location": "query"
      },
      "object": {
       "type": "string",
       "description": "Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "bucket",
      "object"
     ],
     "request": {
      "$ref": "ObjectAccessControl"
     },
     "response": {
      "$ref": "ObjectAccessControl"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/devstorage.full_control"
     ]
    },
    "list": {
     "id": "storage.objectAccessControls.list",
     "path": "b/{bucket}/o/{object}/acl",
     "httpMethod": "GET",
     "description": "Retrieves ACL entries on the specified object.",
     "parameters": {
      "bucket": {
       "type": "string",
       "description": "Name of a bucket.",
       "required": true,
       "location": "path"
      },
      "generation": {
       "type": "string",
       "description": "If present, selects a specific revision of this object (as opposed to the latest version, the default).",
       "format": "int64",
       "location": "query"
      },
      "object": {
       "type": "string",
       "description": "Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "bucket",
      "object"
     ],
     "response": {
      "$ref": "ObjectAccessControls"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/devstorage.full_control"
     ]
    },
    "patch": {
     "id": "storage.objectAccessControls.patch",
     "path": "b/{bucket}/o/{object}/acl/{entity}",
     "httpMethod": "PATCH",
     "description": "Updates an ACL entry on the specified object. This method supports patch semantics.",
     "parameters": {
      "bucket": {
       "type": "string",
       "description": "Name of a bucket.",
       "required": true,
       "location": "path"
      },
      "entity": {
       "type": "string",
       "description": "The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.",
       "required": true,
       "location": "path"
      },
      "generation": {
       "type": "string",
       "description": "If present, selects a specific revision of this object (as opposed to the latest version, the default).",
       "format": "int64",
       "location": "query"
      },
      "object": {
       "type": "string",
       "description": "Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "bucket",
      "object",
      "entity"
     ],
     "request": {
      "$ref": "ObjectAccessControl"
     },
     "response": {
      "$ref": "ObjectAccessControl"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/devstorage.full_control"
     ]
    },
    "update": {
     "id": "storage.objectAccessControls.update",
     "path": "b/{bucket}/o/{object}/acl/{entity}",
     "httpMethod": "PUT",
     "description": "Updates an ACL entry on the specified object.",
     "parameters": {
      "bucket": {
       "type": "string",
       "description": "Name of a bucket.",
       "required": true,
       "location": "path"
      },
      "entity": {
       "type": "string",
       "description": "The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.",
       "required": true,
       "location": "path"
      },
      "generation": {
       "type": "string",
       "description": "If present, selects a specific revision of this object (as opposed to the latest version, the default).",
       "format": "int64",
       "location": "query"
      },
      "object": {
       "type": "string",
       "description": "Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "bucket",
      "object",
      "entity"
     ],
     "request": {
      "$ref": "ObjectAccessControl"
     },
     "response": {
      "$ref": "ObjectAccessControl"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/devstorage.full_control"
     ]
    }
   }
  },
  "objects": {
   "methods": {
    "compose": {
     "id": "storage.objects.compose",
     "path": "b/{destinationBucket}/o/{destinationObject}/compose",
     "httpMethod": "POST",
     "description": "Concatenates a list of existing objects into a new object in the same bucket.",
     "parameters": {
      "destinationBucket": {
       "type": "string",
       "description": "Name of the bucket in which to store the new object.",
       "required": true,
       "location": "path"
      },
      "destinationObject": {
       "type": "string",
       "description": "Name of the new object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.",
       "required": true,
       "location": "path"
      },
      "destinationPredefinedAcl": {
       "type": "string",
       "description": "Apply a predefined set of access controls to the destination object.",
       "enum": [
        "authenticatedRead",
        "bucketOwnerFullControl",
        "bucketOwnerRead",
        "private",
        "projectPrivate",
        "publicRead"
       ],
       "enumDescriptions": [
        "Object owner gets OWNER access, and allAuthenticatedUsers get READER access.",
        "Object owner gets OWNER access, and project team owners get OWNER access.",
        "Object owner gets OWNER access, and project team owners get READER access.",
        "Object owner gets OWNER access.",
        "Object owner gets OWNER access, and project team members get access according to their roles.",
        "Object owner gets OWNER access, and allUsers get READER access."
       ],
       "location": "query"
      },
      "ifGenerationMatch": {
       "type": "string",
       "description": "Makes the operation conditional on whether the object's current generation matches the given value.",
       "format": "int64",
       "location": "query"
      },
      "ifMetagenerationMatch": {
       "type": "string",
       "description": "Makes the operation conditional on whether the object's current metageneration matches the given value.",
       "format": "int64",
       "location": "query"
      }
     },
     "parameterOrder": [
      "destinationBucket",
      "destinationObject"
     ],
     "request": {
      "$ref": "ComposeRequest"
     },
     "response": {
      "$ref": "Object"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/devstorage.full_control",
      "https://www.googleapis.com/auth/devstorage.read_write"
     ],
     "supportsMediaDownload": true,
     "useMediaDownloadService": true
    },
    "copy": {
     "id": "storage.objects.copy",
     "path": "b/{sourceBucket}/o/{sourceObject}/copyTo/b/{destinationBucket}/o/{destinationObject}",
     "httpMethod": "POST",
     "description": "Copies a source object to a destination object. Optionally overrides metadata.",
     "parameters": {
      "destinationBucket": {
       "type": "string",
       "description": "Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket value, if any.For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.",
       "required": true,
       "location": "path"
      },
      "destinationObject": {
       "type": "string",
       "description": "Name of the new object. Required when the object metadata is not otherwise provided. Overrides the object metadata's name value, if any.",
       "required": true,
       "location": "path"
      },
      "destinationPredefinedAcl": {
       "type": "string",
       "description": "Apply a predefined set of access controls to the destination object.",
       "enum": [
        "authenticatedRead",
        "bucketOwnerFullControl",
        "bucketOwnerRead",
        "private",
        "projectPrivate",
        "publicRead"
       ],
       "enumDescriptions": [
        "Object owner gets OWNER access, and allAuthenticatedUsers get READER access.",
        "Object owner gets OWNER access, and project team owners get OWNER access.",
        "Object owner gets OWNER access, and project team owners get READER access.",
        "Object owner gets OWNER access.",
        "Object owner gets OWNER access, and project team members get access according to their roles.",
        "Object owner gets OWNER access, and allUsers get READER access."
       ],
       "location": "query"
      },
      "ifGenerationMatch": {
       "type": "string",
       "description": "Makes the operation conditional on whether the destination object's current generation matches the given value.",
       "format": "int64",
       "location": "query"
      },
      "ifGenerationNotMatch": {
       "type": "string",
       "description": "Makes the operation conditional on whether the destination object's current generation does not match the given value.",
       "format": "int64",
       "location": "query"
      },
      "ifMetagenerationMatch": {
       "type": "string",
       "description": "Makes the operation conditional on whether the destination object's current metageneration matches the given value.",
       "format": "int64",
       "location": "query"
      },
      "ifMetagenerationNotMatch": {
       "type": "string",
       "description": "Makes the operation conditional on whether the destination object's current metageneration does not match the given value.",
       "format": "int64",
       "location": "query"
      },
      "ifSourceGenerationMatch": {
       "type": "string",
       "description": "Makes the operation conditional on whether the source object's generation matches the given value.",
       "format": "int64",
       "location": "query"
      },
      "ifSourceGenerationNotMatch": {
       "type": "string",
       "description": "Makes the operation conditional on whether the source object's generation does not match the given value.",
       "format": "int64",
       "location": "query"
      },
      "ifSourceMetagenerationMatch": {
       "type": "string",
       "description": "Makes the operation conditional on whether the source object's current metageneration matches the given value.",
       "format": "int64",
       "location": "query"
      },
      "ifSourceMetagenerationNotMatch": {
       "type": "string",
       "description": "Makes the operation conditional on whether the source object's current metageneration does not match the given value.",
       "format": "int64",
       "location": "query"
      },
      "projection": {
       "type": "string",
       "description": "Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.",
       "enum": [
        "full",
        "noAcl"
       ],
       "enumDescriptions": [
        "Include all properties.",
        "Omit the owner, acl property."
       ],
       "location": "query"
      },
      "sourceBucket": {
       "type": "string",
       "description": "Name of the bucket in which to find the source object.",
       "required": true,
       "location": "path"
      },
      "sourceGeneration": {
       "type": "string",
       "description": "If present, selects a specific revision of the source object (as opposed to the latest version, the default).",
       "format": "int64",
       "location": "query"
      },
      "sourceObject": {
       "type": "string",
       "description": "Name of the source object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "sourceBucket",
      "sourceObject",
      "destinationBucket",
      "destinationObject"
     ],
     "request": {
      "$ref": "Object"
     },
     "response": {
      "$ref": "Object"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/devstorage.full_control",
      "https://www.googleapis.com/auth/devstorage.read_write"
     ],
     "supportsMediaDownload": true,
     "useMediaDownloadService": true
    },
    "delete": {
     "id": "storage.objects.delete",
     "path": "b/{bucket}/o/{object}",
     "httpMethod": "DELETE",
     "description": "Deletes an object and its metadata. Deletions are permanent if versioning is not enabled for the bucket, or if the generation parameter is used.",
     "parameters": {
      "bucket": {
       "type": "string",
       "description": "Name of the bucket in which the object resides.",
       "required": true,
       "location": "path"
      },
      "generation": {
       "type": "string",
       "description": "If present, permanently deletes a specific revision of this object (as opposed to the latest version, the default).",
       "format": "int64",
       "location": "query"
      },
      "ifGenerationMatch": {
       "type": "string",
       "description": "Makes the operation conditional on whether the object's current generation matches the given value.",
       "format": "int64",
       "location": "query"
      },
      "ifGenerationNotMatch": {
       "type": "string",
       "description": "Makes the operation conditional on whether the object's current generation does not match the given value.",
       "format": "int64",
       "location": "query"
      },
      "ifMetagenerationMatch": {
       "type": "string",
       "description": "Makes the operation conditional on whether the object's current metageneration matches the given value.",
       "format": "int64",
       "location": "query"
      },
      "ifMetagenerationNotMatch": {
       "type": "string",
       "description": "Makes the operation conditional on whether the object's current metageneration does not match the given value.",
       "format": "int64",
       "location": "query"
      },
      "object": {
       "type": "string",
       "description": "Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "bucket",
      "object"
     ],
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/devstorage.full_control",
      "https://www.googleapis.com/auth/devstorage.read_write"
     ]
    },
    "get": {
     "id": "storage.objects.get",
     "path": "b/{bucket}/o/{object}",
     "httpMethod": "GET",
     "description": "Retrieves an object or its metadata.",
     "parameters": {
      "bucket": {
       "type": "string",
       "description": "Name of the bucket in which the object resides.",
       "required": true,
       "location": "path"
      },
      "generation": {
       "type": "string",
       "description": "If present, selects a specific revision of this object (as opposed to the latest version, the default).",
       "format": "int64",
       "location": "query"
      },
      "ifGenerationMatch": {
       "type": "string",
       "description": "Makes the operation conditional on whether the object's generation matches the given value.",
       "format": "int64",
       "location": "query"
      },
      "ifGenerationNotMatch": {
       "type": "string",
       "description": "Makes the operation conditional on whether the object's generation does not match the given value.",
       "format": "int64",
       "location": "query"
      },
      "ifMetagenerationMatch": {
       "type": "string",
       "description": "Makes the operation conditional on whether the object's current metageneration matches the given value.",
       "format": "int64",
       "location": "query"
      },
      "ifMetagenerationNotMatch": {
       "type": "string",
       "description": "Makes the operation conditional on whether the object's current metageneration does not match the given value.",
       "format": "int64",
       "location": "query"
      },
      "object": {
       "type": "string",
       "description": "Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.",
       "required": true,
       "location": "path"
      },
      "projection": {
       "type": "string",
       "description": "Set of properties to return. Defaults to noAcl.",
       "enum": [
        "full",
        "noAcl"
       ],
       "enumDescriptions": [
        "Include all properties.",
        "Omit the owner, acl property."
       ],
       "location": "query"
      }
     },
     "parameterOrder": [
      "bucket",
      "object"
     ],
     "response": {
      "$ref": "Object"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/cloud-platform.read-only",
      "https://www.googleapis.com/auth/devstorage.full_control",
      "https://www.googleapis.com/auth/devstorage.read_only",
      "https://www.googleapis.com/auth/devstorage.read_write"
     ],
     "supportsMediaDownload": true,
     "useMediaDownloadService": true
    },
    "insert": {
     "id": "storage.objects.insert",
     "path": "b/{bucket}/o",
     "httpMethod": "POST",
     "description": "Stores a new object and metadata.",
     "parameters": {
      "bucket": {
       "type": "string",
       "description": "Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket value, if any.",
       "required": true,
       "location": "path"
      },
      "contentEncoding": {
       "type": "string",
       "description": "If set, sets the contentEncoding property of the final object to this value. Setting this parameter is equivalent to setting the contentEncoding metadata property. This can be useful when uploading an object with uploadType=media to indicate the encoding of the content being uploaded.",
       "location": "query"
      },
      "ifGenerationMatch": {
       "type": "string",
       "description": "Makes the operation conditional on whether the object's current generation matches the given value.",
       "format": "int64",
       "location": "query"
      },
      "ifGenerationNotMatch": {
       "type": "string",
       "description": "Makes the operation conditional on whether the object's current generation does not match the given value.",
       "format": "int64",
       "location": "query"
      },
      "ifMetagenerationMatch": {
       "type": "string",
       "description": "Makes the operation conditional on whether the object's current metageneration matches the given value.",
       "format": "int64",
       "location": "query"
      },
      "ifMetagenerationNotMatch": {
       "type": "string",
       "description": "Makes the operation conditional on whether the object's current metageneration does not match the given value.",
       "format": "int64",
       "location": "query"
      },
      "name": {
       "type": "string",
       "description": "Name of the object. Required when the object metadata is not otherwise provided. Overrides the object metadata's name value, if any. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.",
       "location": "query"
      },
      "predefinedAcl": {
       "type": "string",
       "description": "Apply a predefined set of access controls to this object.",
       "enum": [
        "authenticatedRead",
        "bucketOwnerFullControl",
        "bucketOwnerRead",
        "private",
        "projectPrivate",
        "publicRead"
       ],
       "enumDescriptions": [
        "Object owner gets OWNER access, and allAuthenticatedUsers get READER access.",
        "Object owner gets OWNER access, and project team owners get OWNER access.",
        "Object owner gets OWNER access, and project team owners get READER access.",
        "Object owner gets OWNER access.",
        "Object owner gets OWNER access, and project team members get access according to their roles.",
        "Object owner gets OWNER access, and allUsers get READER access."
       ],
       "location": "query"
      },
      "projection": {
       "type": "string",
       "description": "Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.",
       "enum": [
        "full",
        "noAcl"
       ],
       "enumDescriptions": [
        "Include all properties.",
        "Omit the owner, acl property."
       ],
       "location": "query"
      }
     },
     "parameterOrder": [
      "bucket"
     ],
     "request": {
      "$ref": "Object"
     },
     "response": {
      "$ref": "Object"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/devstorage.full_control",
      "https://www.googleapis.com/auth/devstorage.read_write"
     ],
     "supportsMediaDownload": true,
     "useMediaDownloadService": true,
     "supportsMediaUpload": true,
     "mediaUpload": {
      "accept": [
       "*/*"
      ],
      "protocols": {
       "simple": {
        "multipart": true,
        "path": "/upload/storage/v1/b/{bucket}/o"
       },
       "resumable": {
        "multipart": true,
        "path": "/resumable/upload/storage/v1/b/{bucket}/o"
       }
      }
     }
    },
    "list": {
     "id": "storage.objects.list",
     "path": "b/{bucket}/o",
     "httpMethod": "GET",
     "description": "Retrieves a list of objects matching the criteria.",
     "parameters": {
      "bucket": {
       "type": "string",
       "description": "Name of the bucket in which to look for objects.",
       "required": true,
       "location": "path"
      },
      "delimiter": {
       "type": "string",
       "description": "Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted.",
       "location": "query"
      },
      "maxResults": {
       "type": "integer",
       "description": "Maximum number of items plus prefixes to return. As duplicate prefixes are omitted, fewer total results may be returned than requested. The default value of this parameter is 1,000 items.",
       "format": "uint32",
       "minimum": "0",
       "location": "query"
      },
      "pageToken": {
       "type": "string",
       "description": "A previously-returned page token representing part of the larger set of results to view.",
       "location": "query"
      },
      "prefix": {
       "type": "string",
       "description": "Filter results to objects whose names begin with this prefix.",
       "location": "query"
      },
      "projection": {
       "type": "string",
       "description": "Set of properties to return. Defaults to noAcl.",
       "enum": [
        "full",
        "noAcl"
       ],
       "enumDescriptions": [
        "Include all properties.",
        "Omit the owner, acl property."
       ],
       "location": "query"
      },
      "versions": {
       "type": "boolean",
       "description": "If true, lists all versions of an object as distinct results. The default is false. For more information, see Object Versioning.",
       "location": "query"
      }
     },
     "parameterOrder": [
      "bucket"
     ],
     "response": {
      "$ref": "Objects"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/cloud-platform.read-only",
      "https://www.googleapis.com/auth/devstorage.full_control",
      "https://www.googleapis.com/auth/devstorage.read_only",
      "https://www.googleapis.com/auth/devstorage.read_write"
     ],
     "supportsSubscription": true
    },
    "patch": {
     "id": "storage.objects.patch",
     "path": "b/{bucket}/o/{object}",
     "httpMethod": "PATCH",
     "description": "Updates an object's metadata. This method supports patch semantics.",
     "parameters": {
      "bucket": {
       "type": "string",
       "description": "Name of the bucket in which the object resides.",
       "required": true,
       "location": "path"
      },
      "generation": {
       "type": "string",
       "description": "If present, selects a specific revision of this object (as opposed to the latest version, the default).",
       "format": "int64",
       "location": "query"
      },
      "ifGenerationMatch": {
       "type": "string",
       "description": "Makes the operation conditional on whether the object's current generation matches the given value.",
       "format": "int64",
       "location": "query"
      },
      "ifGenerationNotMatch": {
       "type": "string",
       "description": "Makes the operation conditional on whether the object's current generation does not match the given value.",
       "format": "int64",
       "location": "query"
      },
      "ifMetagenerationMatch": {
       "type": "string",
       "description": "Makes the operation conditional on whether the object's current metageneration matches the given value.",
       "format": "int64",
       "location": "query"
      },
      "ifMetagenerationNotMatch": {
       "type": "string",
       "description": "Makes the operation conditional on whether the object's current metageneration does not match the given value.",
       "format": "int64",
       "location": "query"
      },
      "object": {
       "type": "string",
       "description": "Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.",
       "required": true,
       "location": "path"
      },
      "predefinedAcl": {
       "type": "string",
       "description": "Apply a predefined set of access controls to this object.",
       "enum": [
        "authenticatedRead",
        "bucketOwnerFullControl",
        "bucketOwnerRead",
        "private",
        "projectPrivate",
        "publicRead"
       ],
       "enumDescriptions": [
        "Object owner gets OWNER access, and allAuthenticatedUsers get READER access.",
        "Object owner gets OWNER access, and project team owners get OWNER access.",
        "Object owner gets OWNER access, and project team owners get READER access.",
        "Object owner gets OWNER access.",
        "Object owner gets OWNER access, and project team members get access according to their roles.",
        "Object owner gets OWNER access, and allUsers get READER access."
       ],
       "location": "query"
      },
      "projection": {
       "type": "string",
       "description": "Set of properties to return. Defaults to full.",
       "enum": [
        "full",
        "noAcl"
       ],
       "enumDescriptions": [
        "Include all properties.",
        "Omit the owner, acl property."
       ],
       "location": "query"
      }
     },
     "parameterOrder": [
      "bucket",
      "object"
     ],
     "request": {
      "$ref": "Object"
     },
     "response": {
      "$ref": "Object"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/devstorage.full_control"
     ]
    },
    "rewrite": {
     "id": "storage.objects.rewrite",
     "path": "b/{sourceBucket}/o/{sourceObject}/rewriteTo/b/{destinationBucket}/o/{destinationObject}",
     "httpMethod": "POST",
     "description": "Rewrites a source object to a destination object. Optionally overrides metadata.",
     "parameters": {
      "destinationBucket": {
       "type": "string",
       "description": "Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket value, if any.",
       "required": true,
       "location": "path"
      },
      "destinationObject": {
       "type": "string",
       "description": "Name of the new object. Required when the object metadata is not otherwise provided. Overrides the object metadata's name value, if any. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.",
       "required": true,
       "location": "path"
      },
      "destinationPredefinedAcl": {
       "type": "string",
       "description": "Apply a predefined set of access controls to the destination object.",
       "enum": [
        "authenticatedRead",
        "bucketOwnerFullControl",
        "bucketOwnerRead",
        "private",
        "projectPrivate",
        "publicRead"
       ],
       "enumDescriptions": [
        "Object owner gets OWNER access, and allAuthenticatedUsers get READER access.",
        "Object owner gets OWNER access, and project team owners get OWNER access.",
        "Object owner gets OWNER access, and project team owners get READER access.",
        "Object owner gets OWNER access.",
        "Object owner gets OWNER access, and project team members get access according to their roles.",
        "Object owner gets OWNER access, and allUsers get READER access."
       ],
       "location": "query"
      },
      "ifGenerationMatch": {
       "type": "string",
       "description": "Makes the operation conditional on whether the destination object's current generation matches the given value.",
       "format": "int64",
       "location": "query"
      },
      "ifGenerationNotMatch": {
       "type": "string",
       "description": "Makes the operation conditional on whether the destination object's current generation does not match the given value.",
       "format": "int64",
       "location": "query"
      },
      "ifMetagenerationMatch": {
       "type": "string",
       "description": "Makes the operation conditional on whether the destination object's current metageneration matches the given value.",
       "format": "int64",
       "location": "query"
      },
      "ifMetagenerationNotMatch": {
       "type": "string",
       "description": "Makes the operation conditional on whether the destination object's current metageneration does not match the given value.",
       "format": "int64",
       "location": "query"
      },
      "ifSourceGenerationMatch": {
       "type": "string",
       "description": "Makes the operation conditional on whether the source object's generation matches the given value.",
       "format": "int64",
       "location": "query"
      },
      "ifSourceGenerationNotMatch": {
       "type": "string",
       "description": "Makes the operation conditional on whether the source object's generation does not match the given value.",
       "format": "int64",
       "location": "query"
      },
      "ifSourceMetagenerationMatch": {
       "type": "string",
       "description": "Makes the operation conditional on whether the source object's current metageneration matches the given value.",
       "format": "int64",
       "location": "query"
      },
      "ifSourceMetagenerationNotMatch": {
       "type": "string",
       "description": "Makes the operation conditional on whether the source object's current metageneration does not match the given value.",
       "format": "int64",
       "location": "query"
      },
      "maxBytesRewrittenPerCall": {
       "type": "string",
       "description": "The maximum number of bytes that will be rewritten per rewrite request. Most callers shouldn't need to specify this parameter - it is primarily in place to support testing. If specified the value must be an integral multiple of 1 MiB (1048576). Also, this only applies to requests where the source and destination span locations and/or storage classes. Finally, this value must not change across rewrite calls else you'll get an error that the rewriteToken is invalid.",
       "format": "int64",
       "location": "query"
      },
      "projection": {
       "type": "string",
       "description": "Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.",
       "enum": [
        "full",
        "noAcl"
       ],
       "enumDescriptions": [
        "Include all properties.",
        "Omit the owner, acl property."
       ],
       "location": "query"
      },
      "rewriteToken": {
       "type": "string",
       "description": "Include this field (from the previous rewrite response) on each rewrite request after the first one, until the rewrite response 'done' flag is true. Calls that provide a rewriteToken can omit all other request fields, but if included those fields must match the values provided in the first rewrite request.",
       "location": "query"
      },
      "sourceBucket": {
       "type": "string",
       "description": "Name of the bucket in which to find the source object.",
       "required": true,
       "location": "path"
      },
      "sourceGeneration": {
       "type": "string",
       "description": "If present, selects a specific revision of the source object (as opposed to the latest version, the default).",
       "format": "int64",
       "location": "query"
      },
      "sourceObject": {
       "type": "string",
       "description": "Name of the source object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "sourceBucket",
      "sourceObject",
      "destinationBucket",
      "destinationObject"
     ],
     "request": {
      "$ref": "Object"
     },
     "response": {
      "$ref": "RewriteResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/devstorage.full_control",
      "https://www.googleapis.com/auth/devstorage.read_write"
     ]
    },
    "update": {
     "id": "storage.objects.update",
     "path": "b/{bucket}/o/{object}",
     "httpMethod": "PUT",
     "description": "Updates an object's metadata.",
     "parameters": {
      "bucket": {
       "type": "string",
       "description": "Name of the bucket in which the object resides.",
       "required": true,
       "location": "path"
      },
      "generation": {
       "type": "string",
       "description": "If present, selects a specific revision of this object (as opposed to the latest version, the default).",
       "format": "int64",
       "location": "query"
      },
      "ifGenerationMatch": {
       "type": "string",
       "description": "Makes the operation conditional on whether the object's current generation matches the given value.",
       "format": "int64",
       "location": "query"
      },
      "ifGenerationNotMatch": {
       "type": "string",
       "description": "Makes the operation conditional on whether the object's current generation does not match the given value.",
       "format": "int64",
       "location": "query"
      },
      "ifMetagenerationMatch": {
       "type": "string",
       "description": "Makes the operation conditional on whether the object's current metageneration matches the given value.",
       "format": "int64",
       "location": "query"
      },
      "ifMetagenerationNotMatch": {
       "type": "string",
       "description": "Makes the operation conditional on whether the object's current metageneration does not match the given value.",
       "format": "int64",
       "location": "query"
      },
      "object": {
       "type": "string",
       "description": "Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.",
       "required": true,
       "location": "path"
      },
      "predefinedAcl": {
       "type": "string",
       "description": "Apply a predefined set of access controls to this object.",
       "enum": [
        "authenticatedRead",
        "bucketOwnerFullControl",
        "bucketOwnerRead",
        "private",
        "projectPrivate",
        "publicRead"
       ],
       "enumDescriptions": [
        "Object owner gets OWNER access, and allAuthenticatedUsers get READER access.",
        "Object owner gets OWNER access, and project team owners get OWNER access.",
        "Object owner gets OWNER access, and project team owners get READER access.",
        "Object owner gets OWNER access.",
        "Object owner gets OWNER access, and project team members get access according to their roles.",
        "Object owner gets OWNER access, and allUsers get READER access."
       ],
       "location": "query"
      },
      "projection": {
       "type": "string",
       "description": "Set of properties to return. Defaults to full.",
       "enum": [
        "full",
        "noAcl"
       ],
       "enumDescriptions": [
        "Include all properties.",
        "Omit the owner, acl property."
       ],
       "location": "query"
      }
     },
     "parameterOrder": [
      "bucket",
      "object"
     ],
     "request": {
      "$ref": "Object"
     },
     "response": {
      "$ref": "Object"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/devstorage.full_control"
     ],
     "supportsMediaDownload": true,
     "useMediaDownloadService": true
    },
    "watchAll": {
     "id": "storage.objects.watchAll",
     "path": "b/{bucket}/o/watch",
     "httpMethod": "POST",
     "description": "Watch for changes on all objects in a bucket.",
     "parameters": {
      "bucket": {
       "type": "string",
       "description": "Name of the bucket in which to look for objects.",
       "required": true,
       "location": "path"
      },
      "delimiter": {
       "type": "string",
       "description": "Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted.",
       "location": "query"
      },
      "maxResults": {
       "type": "integer",
       "description": "Maximum number of items plus prefixes to return. As duplicate prefixes are omitted, fewer total results may be returned than requested. The default value of this parameter is 1,000 items.",
       "format": "uint32",
       "minimum": "0",
       "location": "query"
      },
      "pageToken": {
       "type": "string",
       "description": "A previously-returned page token representing part of the larger set of results to view.",
       "location": "query"
      },
      "prefix": {
       "type": "string",
       "description": "Filter results to objects whose names begin with this prefix.",
       "location": "query"
      },
      "projection": {
       "type": "string",
       "description": "Set of properties to return. Defaults to noAcl.",
       "enum": [
        "full",
        "noAcl"
       ],
       "enumDescriptions": [
        "Include all properties.",
        "Omit the owner, acl property."
       ],
       "location": "query"
      },
      "versions": {
       "type": "boolean",
       "description": "If true, lists all versions of an object as distinct results. The default is false. For more information, see Object Versioning.",
       "location": "query"
      }
     },
     "parameterOrder": [
      "bucket"
     ],
     "request": {
      "$ref": "Channel",
      "parameterName": "resource"
     },
     "response": {
      "$ref": "Channel"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cloud-platform",
      "https://www.googleapis.com/auth/cloud-platform.read-only",
      "https://www.googleapis.com/auth/devstorage.full_control",
      "https://www.googleapis.com/auth/devstorage.read_only",
      "https://www.googleapis.com/auth/devstorage.read_write"
     ],
     "supportsSubscription": true
    }
   }
  }
 }
}
